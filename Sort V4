///voici la nouvelle version du code: avec le positionnement du joueur victime
//le seul truc qui reste c'est choisir le joueur victime
//Paul c'est a partir de la zone marqué ici Paul

void attaque(t_joueur *tab,int numJoueur,int nbrjoueurs,BITMAP*mapJeu)// i est le joueur qui joue, il manque que maintenant le joueur victime et le sous programme est terminé
{
    srand(time(NULL));
    show_mouse(screen);
    int clic2=0;
    int j;/// joueur victime qui faut decider
    int s,f,g,h,q,x,y,z,a,b;///variables aléatoires
    ///variables emplacement bitmap
    int k=260;//130
    int m=680;//340
    int d=1024;//512
    int c=768;//384
    /*
    while(j==i)
    {
        j++;
        if(j>nbrjoueurs)
        {
            j=1;
        }
    }
    if(tab[i].cpt>=3)
    {
        tab[i].PA=15;
        tab[i].cpt=0;
    }
    if(strcmp(tab[i].choixClasse,"Classe: FEU")==0)//FEU
    {
        BITMAP*feu;
        feu=load_bitmap("pokefeu.bmp",NULL);
        if (!feu)
    {
        allegro_message("Nous n'avons pas pu charger \"pokefeu.bmp\"");
        quitterAllegro();
    }
    blit(feu,mapJeu, 0, 0, k, m, d,c);
    }
    if(strcmp(tab[i].choixClasse,"Classe: EAU")==0)//EAU
    {
        BITMAP*eau;
        eau=load_bitmap("pokeeau.bmp",NULL);
        if (!eau)
    {
        allegro_message("Nous n'avons pas pu charger \"eau.bmp\"");
        quitterAllegro();
    }
    blit(eau,mapJeu, 0, 0, k, m, d,c);
    }
    if(strcmp(tab[i].choixClasse,"Classe: ELECTRIQUE")==0)//ELECTRICITE
    {
        BITMAP*elec;
        elec=load_bitmap("pokeelec.bmp",NULL);
        if (!elec)
    {
        allegro_message("Nous n'avons pas pu charger \"pokeelec.bmp\"");
        quitterAllegro();
    }
    blit(elec,mapJeu, 0, 0, k, m, d,c);
    }
    if(strcmp(tab[i].choixClasse,"Classe: PLANTE")==0)//PLANTE
    {
          BITMAP*plante;
        plante=load_bitmap("pokeplante.bmp",NULL);
        if (!plante)
    {
        allegro_message("Nous n'avons pas pu charger \"pokeplante.bmp\"");
        quitterAllegro();
    }
    blit(plante,mapJeu, 0, 0, k, m, d,c);
    }
    blit(mapJeu,screen,0,0,0,0,d,c);
    */
    
    ///Ici Paul pour la modification
    
  
  
  
    if(tab[numJoueur].PA>=10)//si PA est supérieure à 10
    {
        while(clic2==0)
        {
                                    //Si clic gauche souris cliqué
            if (mouse_b & 1)
            {
                        //collision proche(1case)
                if(mouse_x>=370 && mouse_x<=427 && mouse_y>=603 && mouse_y<=631 ) //Si souris clique 'attaque corps' du dresseur
                {
                    if((tab[j].ligne==tab[numJoueur].ligne+1 || tab[j].ligne==tab[numJoueur].ligne-1) &&(tab[j].colonne==tab[numJoueur].colonne+1 || tab[j].colonne==tab[numJoueur].colonne-1))
                    {
                        h=rand()%(10-1+1)+1;
                        if(h!=1)
                        {
                            tab[numJoueur].PA=tab[numJoueur].PA-1;
                            x=rand()%(30-10+1)+10;
                            tab[j].PV=tab[j].PV-x;
                            printf("PV restant: %d, PV pris : %d du joueur %d\n",tab[j].PV,x,j);
                        }
                        else
                        {
                            allegro_message("rate");
                        }
                        printf("Attaque 1");
                        clic2=1;
                        }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                            //collision loin(2cases)
                if(mouse_x>=428 && mouse_x<=485 mouse_y>=603 && mouse_y<=631)//Si souris clique 'sort1' du dresseur
                {
                    if((tab[j].ligne==tab[numJoueur].ligne+2 || tab[j].ligne==tab[numJoueur].ligne-2) &&(tab[j].colonne==tab[numJoueur].colonne+2 || tab[j].colonne==tab[numJoueur].colonne-2))
                    {
                        s=rand()%(5-1+1)+1;
                        if(s>1)
                        {
                            tab[numJoueur].PA=tab[numJoueur].PA-2;
                            y=rand()%(40-20+1)+20;
                            tab[j].PV=tab[j].PV-y;
                            printf("PV restant : %d, PV pris : %d du joueur %d\n",tab[j].PV,y,j);
                        }
                        else
                        {
                            allegro_message("rate");
                        }
                        printf("Attaque 2");
                        clic2=1;
                    }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                            //collision loin(3cases)
                if(mouse_x>=486 && mouse_x<=544 && mouse_y>=603 && mouse_y<=631)//si souris clique 'sort2' du dresseur//189 218 339 378
                {
                    if((tab[j].ligne<=tab[numJoueur].ligne+3 || tab[j].ligne>=tab[numJoueur].ligne-3) &&(tab[j].colonne<=tab[numJoueur].colonne+3 || tab[j].colonne>=tab[numJoueur].colonne-3))
                    {
                        f=rand()%(10-1+1)+1;
                            if(f>3)
                            {
                                tab[numJoueur].PA=tab[numJoueur].PA-3;
                                z=rand()%(60-40+1)+40;
                                tab[j].PV=tab[j].PV-z;
                                printf("PV restant: %d, PV pris : %d du joueur %d\n",tab[j].PV,z,j);
                            }
                            else
                            {
                                allegro_message("rate");
                            }
                            printf("Attaque 3");
                            clic2=1;
                            }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                if(mouse_x>=545 && mouse_x<=603 && mouse_y>=603 && mouse_y<=631)//si souris clique 'sort3' du dresseur
                {
                    g=rand()%(5-1+1)+1;
                    if(g>2)
                    {
                        tab[numJoueur].PA=tab[numJoueur].PA-4;
                        a=rand()%(60-20+1)+20;
                        tab[numJoueur].PV=tab[numJoueur].PV+a;
                        printf("PV restant:%d, PV donnee : %d au joueur %d\n",tab[numJoueur].PV,a,numJoueur);
                    }
                    else
                    {
                        allegro_message("rate");
                    }
                    printf("Attaque 4");
                    clic2=1;
                }
                            //collision loin 4 cases
                if(mouse_x>=604 && mouse_x<=662 && mouse_y>=553 && mouse_y<=631)//si souris clique 'sort4' du dresseur
                {
                    if((tab[j].ligne<=tab[numJoueur].ligne+4 || tab[j].ligne>=tab[numJoueur].ligne-4) &&(tab[j].colonne<=tab[numJoueur].colonne+3 || tab[j].colonne>=tab[numJoueur].colonne-3))
                    {
                        q=rand()%(2-1+1)+1;
                        if(q!=1)
                        {
                            tab[numJoueur].PA=tab[numJoueur].PA-5;
                            b=rand()%(100-70+1)+70;
                            tab[j].PV=tab[j].PV-b;
                            printf("PV restant : %d, PV pris: %d du joueur %d\n",tab[j].PV,b,j);
                        }
                        else
                        {
                            allegro_message("rate");
                        }
                        printf("Attaque 5");
                        clic2=1;
                    }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
            }
        }
        tab[numJoueur].cpt++;  //compteur plus 1
    }
    else if(tab[numJoueur].PA>=5 && tab[numJoueur].PA<10)
    {
         while(clic2==0)
        {
                                    //Si clic gauche souris cliqué
            if (mouse_b & 1)
            {
                        //collision proche(1case)
                if(mouse_x>=370 && mouse_x<=427 && mouse_y>=603 && mouse_y<=631 ) //Si souris clique 'attaque corps' du dresseur
                {
                    if((tab[j].ligne==tab[numJoueur].ligne+1 || tab[j].ligne==tab[numJoueur].ligne-1) &&(tab[j].colonne==tab[numJoueur].colonne+1 || tab[j].colonne==tab[numJoueur].colonne-1))
                    {
                        h=rand()%(10-1+1)+1;
                        if(h!=1)
                        {
                            tab[numJoueur].PA=tab[numJoueur].PA-1;
                            x=rand()%(30-10+1)+10;
                            tab[j].PV=tab[j].PV-x;
                            printf("PV restant: %d, PV pris : %d du joueur %d\n",tab[j].PV,x,j);
                        }
                        else
                        {
                            allegro_message("rate");
                        }
                        printf("Attaque 1");
                        clic2=1;
                        }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                            //collision loin(2cases)
                if(mouse_x>=428 && mouse_x<=485 mouse_y>=603 && mouse_y<=631)//Si souris clique 'sort1' du dresseur
                {
                    if((tab[j].ligne==tab[numJoueur].ligne+2 || tab[j].ligne==tab[numJoueur].ligne-2) &&(tab[j].colonne==tab[numJoueur].colonne+2 || tab[j].colonne==tab[numJoueur].colonne-2))
                    {
                        s=rand()%(5-1+1)+1;
                        if(s>1)
                        {
                            tab[numJoueur].PA=tab[numJoueur].PA-2;
                            y=rand()%(40-20+1)+20;
                            tab[j].PV=tab[j].PV-y;
                            printf("PV restant : %d, PV pris : %d du joueur %d\n",tab[j].PV,y,j);
                        }
                        else
                        {
                            allegro_message("rate");
                        }
                        printf("Attaque 2");
                        clic2=1;
                    }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                            //collision loin(3cases)
                if(mouse_x>=486 && mouse_x<=544 && mouse_y>=603 && mouse_y<=631)//si souris clique 'sort2' du dresseur//189 218 339 378
                {
                    if((tab[j].ligne<=tab[numJoueur].ligne+3 || tab[j].ligne>=tab[numJoueur].ligne-3) &&(tab[j].colonne<=tab[numJoueur].colonne+3 || tab[j].colonne>=tab[numJoueur].colonne-3))
                    {
                        f=rand()%(10-1+1)+1;
                            if(f>3)
                            {
                                tab[numJoueur].PA=tab[numJoueur].PA-3;
                                z=rand()%(60-40+1)+40;
                                tab[j].PV=tab[j].PV-z;
                                printf("PV restant: %d, PV pris : %d du joueur %d\n",tab[j].PV,z,j);
                            }
                            else
                            {
                                allegro_message("rate");
                            }
                            printf("Attaque 3");
                            clic2=1;
                            }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                if(mouse_x>=545 && mouse_x<=603 && mouse_y>=603 && mouse_y<=631)//si souris clique 'sort3' du dresseur
                {
                    g=rand()%(5-1+1)+1;
                    if(g>2)
                    {
                        tab[numJoueur].PA=tab[numJoueur].PA-4;
                        a=rand()%(60-20+1)+20;
                        tab[numJoueur].PV=tab[numJoueur].PV+a;
                        printf("PV restant:%d, PV donnee : %d au joueur %d\n",tab[numJoueur].PV,a,numJoueur);
                    }
                    else
                    {
                        allegro_message("rate");
                    }
                    printf("Attaque 4");
                    clic2=1;
                }
                            //collision loin 4 cases
                if(mouse_x>=604 && mouse_x<=662 && mouse_y>=553 && mouse_y<=631)//si souris clique 'sort4' du dresseur
                {
                    if((tab[j].ligne<=tab[numJoueur].ligne+4 || tab[j].ligne>=tab[numJoueur].ligne-4) &&(tab[j].colonne<=tab[numJoueur].colonne+3 || tab[j].colonne>=tab[numJoueur].colonne-3))
                    {
                        q=rand()%(2-1+1)+1;
                        if(q!=1)
                        {
                            tab[numJoueur].PA=tab[numJoueur].PA-5;
                            b=rand()%(100-70+1)+70;
                            tab[j].PV=tab[j].PV-b;
                            printf("PV restant : %d, PV pris: %d du joueur %d\n",tab[j].PV,b,j);
                        }
                        else
                        {
                            allegro_message("rate");
                        }
                        printf("Attaque 5");
                        clic2=1;
                    }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
            }
        }
        tab[numJoueur].cpt++;  //compteur plus 1
    }

    else if(tab[1].PA<5)
        {

         while(clic2==0)
        {
                                    //Si clic gauche souris cliqué
            if (mouse_b & 1)
            {
                        //collision proche(1case)
                if(mouse_x>=370 && mouse_x<=427 && mouse_y>=603 && mouse_y<=631 ) //Si souris clique 'attaque corps' du dresseur
                {
                    if((tab[j].ligne==tab[numJoueur].ligne+1 || tab[j].ligne==tab[numJoueur].ligne-1) &&(tab[j].colonne==tab[numJoueur].colonne+1 || tab[j].colonne==tab[numJoueur].colonne-1))
                    {
                        h=rand()%(10-1+1)+1;
                        if(h!=1)
                        {
                            tab[numJoueur].PA=tab[numJoueur].PA-1;
                            x=rand()%(30-10+1)+10;
                            tab[j].PV=tab[j].PV-x;
                            printf("PV restant: %d, PV pris : %d du joueur %d\n",tab[j].PV,x,j);
                        }
                        else
                        {
                            allegro_message("rate");
                        }
                        printf("Attaque 1");
                        clic2=1;
                        }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                            //collision loin(2cases)
                if(mouse_x>=428 && mouse_x<=485 mouse_y>=603 && mouse_y<=631)//Si souris clique 'sort1' du dresseur
                {
                    if((tab[j].ligne==tab[numJoueur].ligne+2 || tab[j].ligne==tab[numJoueur].ligne-2) &&(tab[j].colonne==tab[numJoueur].colonne+2 || tab[j].colonne==tab[numJoueur].colonne-2))
                    {
                        s=rand()%(5-1+1)+1;
                        if(s>1)
                        {
                            tab[numJoueur].PA=tab[numJoueur].PA-2;
                            y=rand()%(40-20+1)+20;
                            tab[j].PV=tab[j].PV-y;
                            printf("PV restant : %d, PV pris : %d du joueur %d\n",tab[j].PV,y,j);
                        }
                        else
                        {
                            allegro_message("rate");
                        }
                        printf("Attaque 2");
                        clic2=1;
                    }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                            //collision loin(3cases)
                if(mouse_x>=486 && mouse_x<=544 && mouse_y>=603 && mouse_y<=631)//si souris clique 'sort2' du dresseur//189 218 339 378
                {
                    if((tab[j].ligne<=tab[numJoueur].ligne+3 || tab[j].ligne>=tab[numJoueur].ligne-3) &&(tab[j].colonne<=tab[numJoueur].colonne+3 || tab[j].colonne>=tab[numJoueur].colonne-3))
                    {
                        f=rand()%(10-1+1)+1;
                            if(f>3)
                            {
                                tab[numJoueur].PA=tab[numJoueur].PA-3;
                                z=rand()%(60-40+1)+40;
                                tab[j].PV=tab[j].PV-z;
                                printf("PV restant: %d, PV pris : %d du joueur %d\n",tab[j].PV,z,j);
                            }
                            else
                            {
                                allegro_message("rate");
                            }
                            printf("Attaque 3");
                            clic2=1;
                            }
                    else
                    {
                        allegro_message("Impossible");
                    }
                }
                if(mouse_x>=545 && mouse_x<=603 && mouse_y>=603 && mouse_y<=631)//si souris clique 'sort3' du dresseur
                {
                    g=rand()%(5-1+1)+1;
                    if(g>2)
                    {
                        tab[numJoueur].PA=tab[numJoueur].PA-4;
                        a=rand()%(60-20+1)+20;
                        tab[numJoueur].PV=tab[numJoueur].PV+a;
                        printf("PV restant:%d, PV donnee : %d au joueur %d\n",tab[numJoueur].PV,a,numJoueur);
                    }
                    else
                    {
                        allegro_message("rate");
                    }
                    printf("Attaque 4");
                    clic2=1;
                }
                           //collision loin 4 cases
                if(mouse_x>=604 && mouse_x<=662 && mouse_y>=553 && mouse_y<=631)//si souris clique 'sort4' du dresseur
                {
                    if((tab[j].ligne<=tab[numJoueur].ligne+4 || tab[j].ligne>=tab[numJoueur].ligne-4) &&(tab[j].colonne<=tab[numJoueur].colonne+3 || tab[j].colonne>=tab[numJoueur].colonne-3))
                    {
                        allegro_message("Impossible pas assez de PA");
                    }
            }
        }
        tab[numJoueur].cpt++;  //compteur plus 1
    }

}
